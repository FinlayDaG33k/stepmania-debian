--- a/src/NotesLoaderSM.cpp
+++ b/src/NotesLoaderSM.cpp
@@ -1184,7 +1184,7 @@
 		{
 			if( pSong == NULL )
 			{
-				LOG->UserLog( "Edit file", sEditFilePath, "doesn't have a #SONG tag preceeding the first #NOTES tag, and is not in a valid song-specific folder." );
+				LOG->UserLog( "Edit file", sEditFilePath, "doesn't have a #SONG tag preceding the first #NOTES tag, and is not in a valid song-specific folder." );
 				return false;
 			}
 
--- a/src/NotesLoaderSSC.cpp
+++ b/src/NotesLoaderSSC.cpp
@@ -1088,7 +1088,7 @@
 			{
 				LOG->UserLog("Edit file",
 					     sEditFilePath,
-					     "doesn't have a #SONG tag preceeding the first #NOTES tag, and is not in a valid song-specific folder." );
+					     "doesn't have a #SONG tag preceding the first #NOTES tag, and is not in a valid song-specific folder." );
 				return false;
 			}
 
--- a/src/OptionRowHandler.cpp
+++ b/src/OptionRowHandler.cpp
@@ -203,7 +203,7 @@
 				}
 				else
 				{
-					LuaHelpers::ReportScriptErrorFmt("Unkown row flag \"%s\".", sName.c_str());
+					LuaHelpers::ReportScriptErrorFmt("Unknown row flag \"%s\".", sName.c_str());
 				}
 			}
 			for( int col = 0; col < NumCols; ++col )
--- a/src/RageSurface_Load_GIF.cpp
+++ b/src/RageSurface_Load_GIF.cpp
@@ -144,7 +144,7 @@
 			unsigned char label;
 			if( !ReadOK(f, &label, 1) )
 			{
-				error = "EOF / read error on extention function code";
+				error = "EOF / read error on extension function code";
 				return RageSurfaceUtils::OPEN_FATAL_ERROR;
 			}
 
--- a/src/InputMapper.cpp
+++ b/src/InputMapper.cpp
@@ -108,7 +108,7 @@
 	AutoMappings(
 		"dance",
 		"GIC USB Joystick",
-		"Boom USB convertor (black/gray)",
+		"Boom USB converter (black/gray)",
 		AutoMappingEntry( 0, JOY_BUTTON_16,     DANCE_BUTTON_LEFT,      false ),
 		AutoMappingEntry( 0, JOY_BUTTON_14,     DANCE_BUTTON_RIGHT,     false ),
 		AutoMappingEntry( 0, JOY_BUTTON_13,     DANCE_BUTTON_UP,	    false ),
